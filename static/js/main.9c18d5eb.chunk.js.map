{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,2BAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CACZJ,WAAW,4BAAD,OAA8BG,EAAME,IAApC,YARlB,kCAaE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CACZJ,WAAW,4BAAD,OAA8BG,EAAME,IAApC,YAhBlB,oBAqBE,WACE,IAAQL,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA8BR,UA1BtC,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.9c18d5eb.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({\n        pressedKey: `The last pressed key is [${event.key}]`,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({\n        pressedKey: `The last pressed key is [${event.key}]`,\n      });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{ pressedKey }</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}